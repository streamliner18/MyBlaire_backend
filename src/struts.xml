<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
	"./struts-2.1.dtd">

<struts>
	<!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开  -->
	<!-- Whether system jreloads the Struts configuration xml when it changes. False it after development finished  -->
	<constant name="struts.configuration.xml.reload" value="true" />

	<!--上传文件的大小限制-->
	<!--Maximum size for uploaded file-->
	<constant name="struts.multipart.maxSize" value="1572864000000000" />
	<!-- 开发模式下使用,这样可以打印出更详细的错误信息 -->
	<!--Development mode for verbose output in case of error-->
	<constant name="struts.devMode" value="true" />
	<!-- 该属性设置Struts 2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false。-->
	<!--Enabling Dynamic Method Invocation for Struts 2. Leave false if not needed.-->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!--
		指定默认编码集,作用于HttpServletRequest的setCharacterEncoding方法 和freemarker
		、velocity的输出
	-->
	<!--Default text encoding for setCharacterEncoding method used in HttpServletRequest and output of freemarker and velocity-->
	<constant name="struts.custom.i18n.resources" value="UTF-8"></constant>
	<constant name="struts.action.extension" value=",action,do,edit,save" />
	<!--
		上传文件的大小限制 <constant name="struts.multipart.maxSize" value="10701096"/>
	-->
	<!--Ignore that one-->
	<bean type="org.apache.struts2.dispatcher.multipart.MultiPartRequest"
		name="myRequestParser" class="com.myBlaire.action.RequestParseWrapper"
		scope="default" optional="true " />
	<constant name="struts.multipart.parser" value="myRequestParser" />

	<package name="default" extends="struts-default" abstract="true">

		<interceptors>
			<interceptor name="checkUser" class="checkUserInterceptor" />
			<!-- 全局拦截器 -->
			<!--Global interceptor-->

			<interceptor-stack name="myStack">
				<interceptor-ref name="checkUser">
				</interceptor-ref>
				<interceptor-ref name="defaultStack">
				</interceptor-ref>
			</interceptor-stack>

		</interceptors>
		<default-interceptor-ref name="myStack" />
	</package>
	
	<package name="appDefault" extends="struts-default" abstract="true">
		<interceptors>
			<interceptor name="appInterceptor" class="appInterceptor"/>
			<!-- 全局拦截器 -->
			<!--Global interceptor-->

			<interceptor-stack name="myStack"> 
				<interceptor-ref name="appInterceptor"> </interceptor-ref> 
				<interceptor-ref name="defaultStack"> </interceptor-ref> 
			</interceptor-stack>
			
		</interceptors>
		<default-interceptor-ref name="myStack"/>
		<global-results>
			<result name="input"></result>
		</global-results>
		
		
	</package><!--
	  
	<package name="aaa" namespace="/aaa" extends="struts-default">
		<action name="newDiscount" class="userAppInterfaceAction" method="newDiscount">
		</action>
		最具人气 
		<action name="getHotGoods" class="userAppInterfaceAction" method="getHotGoods">
		</action>
		明星同款 
		<action name="getStreetShootingGoods" class="userAppInterfaceAction" method="getStreetShootingGoods">
		</action>
		商品列表 
		<action name="getGoods" class="userAppInterfaceAction" method="getGoods">
		</action>
	</package>
	--><package name="main" namespace="/" extends="default">
		<action name="page" class="com.myBlaire.action.PageAction"
			method="getPage">
			<result name="success">/WEB-INF/pages/${module}/${resource}.jsp</result>
		</action>
		<!--First Access -->
		<action name="firstLoadPage" class="sysLoginAction" method="firstLoadPage">
			<result name="input" type="redirect">login.jsp</result>
			<result name="success">/WEB-INF/pages/common/index.jsp
			</result>
		</action>
		<action name="login" class="sysLoginAction" method="login">
			<result name="input">login.jsp</result>
			<result name="success">/WEB-INF/pages/common/index.jsp
			</result>
		</action>
		<action name="logout" class="sysLoginAction" method="logout"><!-- 登录 -->
			<result name="success" type="redirect">/login.jsp</result>
		</action>
	</package>
	<package name="upload" namespace="/" extends="struts-default">
		<action name="upload" class="uploadAction" method="uploadFile">
		</action>
	</package>



	<package name="dict" namespace="/dict" extends="default">
		<!--List of Dictionary Content  -->
		<action name="getList" class="sysDictAction" method="getList">
		</action>
		<!--Add Dictionary Data  -->
		<action name="saveDict" class="sysDictAction" method="saveDict">
		</action>
		<!--Modify Dictionary Data  -->
		<action name="editDict" class="sysDictAction" method="editDict">
		</action>

	</package>

	<package name="keyword" namespace="/keyword" extends="default">
		<!--List of Keywords  -->
		<action name="getList" class="keywordAction" method="getList">
		</action>
		<!--Modify or Add Keyword -->
		<action name="saveKeyWord" class="keywordAction" method="saveKeyWord">
		</action>
	</package>

	<package name="user" namespace="/user" extends="default">
		<!--List of Users  -->
		<action name="getList" class="tUserAction" method="getList">
		</action>
		<!--Modify or Add Users  -->
		<action name="saveUser" class="tUserAction" method="saveUser">
		</action>
		<!--List of User's Collections  -->
		<action name="getCollectList" class="tUserAction" method="getCollectList">
		</action>
	</package>

	<package name="goods" namespace="/goods" extends="default">
		<!--List of Goods  -->
		<action name="getList" class="tGoodsAction" method="getList">
		</action>
		<!--Retrieve List of Colors  -->
		<action name="colorList" class="tGoodsAction" method="getColorList">
		</action>
		<!--Modify or Add Goods  -->
		<action name="save" class="tGoodsAction" method="saveGood">
		</action>
	</package>
	<package name="feedback" namespace="/feedback" extends="default">
		<!--Retrieve list of Feedback  -->
		<action name="getList" class="tFeedbackAction" method="getList">
		</action>
	</package>

	<!--Meenatchi - I don't think the methods above are relevant to the App Backend. Please review the methods once more
	and disregard the functions if useless. -->


	<!-- Below are app related functions with /app namespace. It's this one!!! -->
	<package name="app" namespace="/app" extends="appDefault">
		<!--Normal Login  -->
		<action name="normalLogin" class="userNormalOperationAction" method="normalLogin">
		</action>
		<!--Normal Registration  -->
		<action name="register" class="userNormalOperationAction" method="register">
		</action>
		<!--Forgot Password -->
		<action name="findPWD" class="userNormalOperationAction" method="findPWD">
		</action>
		<!--Third Party Login -->
		<action name="thirdPartyLogin" class="userNormalOperationAction" method="thirdPartyLogin">
		</action>
		<!--Retrieve list of keywords on the search view -->
		<action name="getKeyWord" class="userAppInterfaceAction" method="getKeyWord">
		</action>
		<!--Retrieve list of most popular goods (home page section 1/3)-->
		<action name="getHotGoods" class="userAppInterfaceAction" method="getHotGoods">
		</action>
		<!--Retrieve list of street shooting goods (home page section 2/3)-->
		<action name="getStreetShootingGoods" class="userAppInterfaceAction" method="getStreetShootingGoods">
		</action>
		<!--Retrieve list of goods -->
		<action name="getGoods" class="userAppInterfaceAction" method="getGoods">
		</action>
		<!--Retrieve detail of goods -->
		<action name="getGoodDetailed" class="userAppInterfaceAction" method="getGoodDetailed">
		</action>
		<!--Action for Like button (Add good to personal collection)-->
		<action name="collectGood" class="userAppInterfaceAction" method="collectGood">
		</action>
		<!--List down all collected goods for the current user-->
		<action name="collectOrder" class="userAppInterfaceAction" method="collectOrder">
		</action>
		<!--Handler for feedback sent from app-->
		<action name="saveFeedback" class="userAppInterfaceAction" method="saveFeedback">
		</action>
		<!-- Retrieve list of most discounted goods (home page section 3/3) -->
		<action name="newDiscount" class="userAppInterfaceAction" method="newDiscount">
		</action>
	</package>
</struts>
